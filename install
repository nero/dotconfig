#!/bin/sh
set -ex

# Sanity check... when invoked via PATH resolution, we dont know where we are.
# If thats the case, just give up.
test -x "$0"

# If dest has our install script, *assume* that it is us.
# Checking path equivalency does not always work correctly due to symlinks.
# example: FreeBSD has /home -> /usr/home symlink, so PWD might be outside HOME.
# Devtools like gitpod or coder clone us below ~/.config, so we cannot move or
# unlink that. Walking on eggshells...
if ! test -f ~/.config/install; then
  # If not, make sure dest exists
  mkdir -p ~/.config
  # And then copy ourselves there
  src=$(dirname "$0")
  cp -r $src/* $src/.git ~/.config/
fi

# cd to the directory where we will make the symlinks.
# This way, the relative path glob will be valid targets for the symlinks.
cd "${HOME?Home is not set}"

for target in .config/*/dot.*; do
  # Extract command from first asterisk.
  cmd=${target%/*};
  cmd=${cmd##*/}
  # Dotfile name from second asterisk.
  dotfile=.${target#*/dot.}

  # Either a command of that name exists, or we skip setting up the dotfile.
  # This mechanism skips bashrc etc if bash not installed (i hate bash).
  command -v "$cmd" >/dev/null 2>&1 || continue

  # If the dotfile already exists and is a directory (likely with .ssh), merge.
  # This might be destructive for us, but will save ssh keys
  if ! test -h "$dotfile" && test -d "$dotfile"; then
    mv -f "$dotfile"/* "$target"/
    rmdir "$dotfile"
  fi

  # If dotfile is a symlink pointing to a directory, ln(1) will create symlink
  # inside that directory instead of setting the symlink. Unlink it first.
  # -f because failure is okay.
  rm -f "$dotfile"
  ln -s "$target" "$dotfile"
done

keytype=ed25519
privkey=.ssh/id_${keytype}
pubkey=${privkey}.pub

# No key material, nothing to do here. finish
test -e "${privkey}" || exit 0

# Pubkey should exist in file form. Generate from privkey if necessary
test -e "${pubkey}" || ssh-keygen -y -f "${privkey}" >"${pubkey}" || rm "${pubkey}"

# Upload the key.
# Remote is some kind of pastebin, not the SSH CA, if you are after that.
curl -T "${pubkey}" https://w1r3.net/ssh/submit
