# Config for interactive shells

case "$-" in
 *i*) ;;
 *) return;;
esac

export VISUAL=$(
  for e in nano mcedit vi vim; do
    hash "$e" >/dev/null 2>&1 && echo "$e" && break
  done
)

_ps_init() { :;}
_ps_unprintf() { printf "$@";}

if [ -n "$BASH_VERSION" ]; then
  shopt -s checkwinsize
  _ps_unprintf() { p="$1"; shift; printf "\\[$p\\]" "$@";}
elif [ -n "$ZSH_VERSION" ]; then
  setopt PROMPT_SUBST autolist noautomenu
  unsetopt menucomplete nomatch beep
  _ps_unprintf() { p="$1"; shift; printf "%%{$p%%}" "$@";}
elif [ -n "${KSH_VERSION##*PD KSH*}" ]; then
  _ps_init() { printf '\001\r';}
  _ps_unprintf() { p="$1"; shift; printf "\\001$p\\001" "$@";}
fi

_ps_prompt() {
  $1 '\033[1;32m'
  printf '%s' '${USER:+$USER@}${HOSTNAME%%.*}'
  $1 '\033[0m'
  printf '%s' ':'
  $1 '\033[1;36m'
  printf '%s' '${PWD##$HOME/}'
  $1 '\033[0m'
  printf '%s' '[$?]'
  printf '%s' ': '
}

PS1=$(
  _ps_init
  _ps_prompt _ps_unprintf
  case "$TERM" in
  xterm*|rxvt*|st*|screen*|tmux*)
    _ps_unprintf '\033]0;%s\007' "$(_ps_prompt true)"
    ;;
  esac
)

preexec() {
  printf '\033]0;%s\007' "$1";
}

mrproper() (
  rm -rf ~/.ccache ~/.buildroot-ccache ~/.cache ~/.thumbnails \
    ~/.local/share/Trash ~/.local/share/*/*history*
    ~/.local/share/gvfs-metadata ~/.w3m

  rm ~/.local/share/mc/filepos ~/.local/share/mc/history \
    ~/.local/share/mc/mcedit/mcedit.clip ~/.local/share/recently-used* \
    ~/.*_history ~/.lesshst ~/.wget-hsts ~/clip
)

pastebin() (
  [ -n "$1" ] && exec < "$1"
  curl -F'file=@-' http://0x0.st
)

p() (
  dir="$XDG_CONFIG_HOME"/periodic/"$1"
  cd "$dir" || exit 1
  for i in ./*; "$i"
)

{
  export SSH_AUTH_SOCK="$HOME"/.ssh/ssh-agent."$HOSTNAME".sock
  unset SSH_AGENT_PID
  ssh-add -L
  [ "$?" = "2" ] && rm -f "$SSH_AUTH_SOCK" && ssh-agent -a "$SSH_AUTH_SOCK"

  gpg-connect-agent /bye
  export GPG_TTY=$(tty)
} > /dev/null 2>&1

for f in "$XDG_CONFIG_HOME"/local/shellrc; do
  [ -e "$f" ] && . "$f"
done
