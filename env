# Config for setting up the environment across all sessions/applications

# bash will source this file if its an non-interactive SSH login...
# so lets prevent execution for non-interactive shells
case "$-" in
  (*i*) ;;
  (*) return;;
esac

# short prompt with basename of PWD
unset PS1
if test "$(id -u)" -eq 0; then
  PS1='${PWD##*/}# '
else
  PS1='${PWD##*/}$ '
fi

# move history file out of homedir
c=${0##*/}
c=${c#-}
HISTFILE=${XDG_DATA_HOME:-$HOME/.local/share}/${c}_history

# PROMPT_COMMAND is normally bash-specific, but we make other shells also eval it
unset PROMPT_COMMAND
PROMPT_COMMAND="case \$? in (0) ;; (*) echo [\$?];; esac;"

# some emulators support changing the window title via escape sequence
case "$TERM" in
(screen*|tmux*|xterm*|rxvt-*|foot) PROMPT_COMMAND=${PROMPT_COMMAND}"printf \"\033]0;%s\007\" \"\${PWD##*/} - $(id -un)@$(uname -n)\";";;
esac

# Make sure prompt always starts in column 0
if test -n "$COLUMNS"; then
  PROMPT_COMMAND=${PROMPT_COMMAND}'printf "%${COLUMNS}s\\r" "";'
elif command -v tput >/dev/null 2>&1; then
  PROMPT_COMMAND=${PROMPT_COMMAND}'printf "%$(tput cols)s\\r" "";'
fi

# Notify term of prompt position
case "$TERM" in
(foot) PROMPT_COMMAND=${PROMPT_COMMAND}'printf "\e]133;A\e\\";';;
esac

if [ -n "$BASH_VERSION" ]; then
  set -o posix
elif [ -n "$ZSH_VERSION" ]; then
  setopt PROMPT_SUBST PROMPT_BANG autolist noautomenu
  # also unset the whacky autocompletion shit
  unsetopt menucomplete nomatch beep
  precmd() {
    eval "$PROMPT_COMMAND"
  }
else
  PS1='$(eval "$PROMPT_COMMAND" >&2)'$PS1
fi

# load drop-ins
for f in "$XDG_CONFIG_HOME"/*/env; do
  c=${f%/*}
  command -v "${c##*/}" >/dev/null 2>&1 && . "$f"
done
unset c f
