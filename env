# Config for setting up the environment across all sessions/applications

# bash will source this file if its an non-interactive SSH login...
# so lets prevent execution for non-interactive shells
case "$-" in
  (*i*) ;;
  (*) return;;
esac

# POSIX says $0 is "normally a pathname used to execute the sh utility."
# Should be enough to keep history files of different shells interfering each other
sh=${0##*/}
sh=${sh#-}
id=$(id -un)
hostname=$(uname -n)

# unset to unexport
unset PS1 PROMPT_COMMAND HISTFILE

# short prompt resembling rsync or git remote
case "${id}" in
(root) PS1=$hostname:'${PWD#$HOME/}# ';;
(*)    PS1=$hostname:'${PWD#$HOME/}$ ';;
esac

# move history file out of homedir
HISTFILE=${XDG_DATA_HOME:-$HOME/.local/share}/${sh}_history

# PROMPT_COMMAND is normally bash-specific, but we make other shells also eval it
PROMPT_COMMAND="case \$? in (0) ;; (*) echo [\$?];; esac;"

# some emulators support changing the window title via escape sequence
case "$TERM" in
(screen*|tmux*|xterm*|rxvt-*|foot) PROMPT_COMMAND=${PROMPT_COMMAND}"printf \"\033]0;%s\007\" \"\${PWD##*/} - ${id}@${hostname}\";";;
esac

# Make sure prompt always starts in column 0
if test -n "$COLUMNS"; then
  PROMPT_COMMAND=${PROMPT_COMMAND}'printf "%${COLUMNS}s\\r" "";'
elif command -v tput >/dev/null 2>&1; then
  PROMPT_COMMAND=${PROMPT_COMMAND}'printf "%$(tput cols)s\\r" "";'
fi

# Notify term of prompt position
case "$TERM" in
(foot) PROMPT_COMMAND=${PROMPT_COMMAND}'printf "\e]133;A\e\\";';;
esac

case "$sh" in
(zsh)
  setopt PROMPT_SUBST PROMPT_BANG autolist noautomenu
  # also unset the whacky autocompletion shit
  unsetopt menucomplete nomatch beep
  precmd() {
    eval "$PROMPT_COMMAND"
  } ;;
(*)
  PS1='$(eval "$PROMPT_COMMAND" >&2)'$PS1 ;;
esac

# load drop-ins
for f in "${XDG_CONFIG_HOME:-$HOME/.config}"/*/env; do
  c=${f%/*}
  command -v "${c##*/}" >/dev/null 2>&1 && . "$f"
done
unset c f
